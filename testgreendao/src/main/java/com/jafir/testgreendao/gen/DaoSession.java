package com.jafir.testgreendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.jafir.testgreendao.Head;
import com.jafir.testgreendao.JoinStudentToPerson;
import com.jafir.testgreendao.Person;
import com.jafir.testgreendao.Student;

import com.jafir.testgreendao.gen.HeadDao;
import com.jafir.testgreendao.gen.JoinStudentToPersonDao;
import com.jafir.testgreendao.gen.PersonDao;
import com.jafir.testgreendao.gen.StudentDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig headDaoConfig;
    private final DaoConfig joinStudentToPersonDaoConfig;
    private final DaoConfig personDaoConfig;
    private final DaoConfig studentDaoConfig;

    private final HeadDao headDao;
    private final JoinStudentToPersonDao joinStudentToPersonDao;
    private final PersonDao personDao;
    private final StudentDao studentDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        headDaoConfig = daoConfigMap.get(HeadDao.class).clone();
        headDaoConfig.initIdentityScope(type);

        joinStudentToPersonDaoConfig = daoConfigMap.get(JoinStudentToPersonDao.class).clone();
        joinStudentToPersonDaoConfig.initIdentityScope(type);

        personDaoConfig = daoConfigMap.get(PersonDao.class).clone();
        personDaoConfig.initIdentityScope(type);

        studentDaoConfig = daoConfigMap.get(StudentDao.class).clone();
        studentDaoConfig.initIdentityScope(type);

        headDao = new HeadDao(headDaoConfig, this);
        joinStudentToPersonDao = new JoinStudentToPersonDao(joinStudentToPersonDaoConfig, this);
        personDao = new PersonDao(personDaoConfig, this);
        studentDao = new StudentDao(studentDaoConfig, this);

        registerDao(Head.class, headDao);
        registerDao(JoinStudentToPerson.class, joinStudentToPersonDao);
        registerDao(Person.class, personDao);
        registerDao(Student.class, studentDao);
    }
    
    public void clear() {
        headDaoConfig.getIdentityScope().clear();
        joinStudentToPersonDaoConfig.getIdentityScope().clear();
        personDaoConfig.getIdentityScope().clear();
        studentDaoConfig.getIdentityScope().clear();
    }

    public HeadDao getHeadDao() {
        return headDao;
    }

    public JoinStudentToPersonDao getJoinStudentToPersonDao() {
        return joinStudentToPersonDao;
    }

    public PersonDao getPersonDao() {
        return personDao;
    }

    public StudentDao getStudentDao() {
        return studentDao;
    }

}
